blueprint:
  name: INVENTOCASA - PV Excess Optimizer
  description: '### **PV EXCESS OPTIMIZER**

    Automatically control your appliances based on excess power from your solar system
    <br> <br> &rarr; Remember to read the **[README](https://github.com/nicorusti/ha-advanced-blueprints/blob/main/PV_Excess_Control/README.md)**
    for prerequisites and installation instructions

    &rarr; If you need help, head over to the [thread in the HA community forum](https://community.home-assistant.io/t/pv-solar-excess-optimizer-auto-control-appliances-wallbox-dish-washer-heatpump-based-on-excess-solar-power/552677)

    &rarr; Bugs and feature requests can be created directly on the [GitHub repository](https://github.com/nicorusti/ha-advanced-blueprints)

    '
  domain: automation
  input:
    general_settings:
      name: General Settings
      icon: mdi:cog
      description: Basic configuration for the blueprint.
      collapsed: true
      input:
        automation_id:
          name: Automation Entity ID
          description: '**[IMPORTANT]**

            **This field must contain the *entity_id* you defined for this automation.**

            The entity_id must be unique!

            You can check your automation entity_id by clicking on the three dots in the
            top right corner of your automation editor and selecting *info* --> *settings*

            '
          default: ''
          selector:
            text:
              multiple: false
              multiline: false
        grid_voltage:
          name: Mains Voltage
          description: 'The voltage of your household electrical grid (**not** your appliance!).

            Typically 230V for most of EU, 110V for US.


            **[WARNING]**

            - **This value must be the same for all your created automations based on
            this blueprint!**

            '
          default: 230
          selector:
            number:
              min: 110.0
              max: 240.0
              mode: box
              unit_of_measurement: V
              step: 1.0

    power_sensors:
      name: Power Sensors
      icon: mdi:solar-power
      description: Configure the sensors that measure your power production and consumption.
      collapsed: true
      input:
        pv_power:
          name: PV Power
          default: ''
          description: 'Sensor which contains your current **PV generated power** in watts.

            Must not be negative! For best results, this sensor should be updated at least
            every minute.


            **[WARNING]**

            - **This sensor must be the same for all your created automations based on
            this blueprint!**

            '
          selector:
            entity:
              domain:
              - sensor
              multiple: false
              reorder: false
        export_power:
          name: Export Power
          description: 'Sensor which contains your current **export power to the grid**
            in watts. Must not be negative! For best results, this sensor should be updated
            at least every minute.


            **[WARNING]**

            - **This sensor must be the same for all your created automations based on
            this blueprint!**

            - **This sensor must always be provided together with the *load power* sensor.**


            **[NOTE]**

            - If you can''t measure this value directly, leave this field empty and provide
            a combined import/export power sensor.

            '
          default:
          selector:
            entity:
              domain:
              - sensor
              multiple: false
              reorder: false
        load_power:
          name: Load Power
          description: 'Sensor which contains your current **load power** (*combined household
            appliance consumption without home battery charging consumption*) in watts.
            Must not be negative!

            For best results, this sensor should be updated at least every minute.


            **[WARNING]**

            - **This sensor must be the same for all your created automations based on
            this blueprint!**

            - **This sensor must always be provided together with the *export power* sensor.**


            **[NOTE]**

            - If you can''t measure this value directly, leave this field empty and provide
            a combined import/export power sensor.

            - The combined household appliance consumption will always be prioritized,
            meaning that if you e.g. turn on your electric oven, and as a result the excess
            power is near zero, your appliance with the lowest priority will be switched
            off (according to its On/Off switch interval).

            '
          default:
          selector:
            entity:
              domain:
              - sensor
              multiple: false
              reorder: false
        import_export_power:
          name: Combined Import/Export Power
          description: 'Sensor which contains **both**, your current **import power from
            the grid** (*positive* values) and your current **export power to the grid**
            in watts (*negative* values).

            For best results, this sensor should be updated at least every minute.


            **[WARNING]**

            - **This sensor must be the same for all your created automations based on
            this blueprint!**

            - **This sensor may only be specified when you cannot provide both the *Export
            Power* and *Load Power* sensor! This is normally the case when you have a
            standard inverter without battery.**

            - **Do not use this sensor when you have a hybrid inverter with battery. Otherwise
            the script cannot detect when your battery is discharging to compensate for
            a load!**


            **[NOTE]**

            - This is typically the value your household energy meter shows.

            '
          default:
          selector:
            entity:
              domain:
              - sensor
              multiple: false
              reorder: false

    home_battery_settings:
      name: Home Battery Settings
      icon: mdi:home-battery
      description: Configure how the blueprint interacts with your home battery.
      collapsed: true
      input:
        home_battery_level:
          name: Home battery level
          description: 'Sensor which represents the **charge level of your home battery**
            (in percent)


            **[WARNING]**

            - **This sensor must be the same for all your created automations based on
            this blueprint!**


            **[NOTE]**

            - If your solar system is not coupled with a battery, leave this field empty

            '
          default:
          selector:
            entity:
              domain:
              - sensor
              multiple: false
              reorder: false
        min_home_battery_level:
          name: Minimum home battery level (end of day)
          description: 'Minimum desired power level (in percent) of your home battery
            (end of day)


            **[WARNING]**

            - **This sensor must be the same for all your created automations based on
            this blueprint!**


            **[NOTE]**

            - If your solar system is not coupled with a battery, this field will be ignored.

            - *If you also specify **solar production forecast***, the script will optimize
            your PV excess consumption right away and ensure that the specified *minimum
            home battery level* is reached at the **end of the day**.

            '
          default: 100
          selector:
            number:
              min: 0.0
              max: 100.0
              step: 5.0
              unit_of_measurement: '%'
              mode: slider
        min_home_battery_level_start:
          name: Minimum home battery level (to start)
          description: 'Minimum desired power level (in percent) of your home battery
            (to start) .

            Tick this box if your appliance should only be turned on, if enough battery
            level and without solar forecast prediction.

            **[WARNING]**

            - **This sensor must be the same for all your created automations based on
            this blueprint!**


            **[NOTE]**

            - *The home battery will be charged to the specified level *before* switching
            on appliances or to consider solar production forecast.

            '
          default: false
          selector:
            boolean: {}
        home_battery_capacity:
          name: Home battery capacity
          description: 'The usable capacity (in kWh) of your home battery


            **[WARNING]**

            - **This sensor must be the same for all your created automations based on
            this blueprint!**


            **[NOTE]**

            - If your solar system is not coupled with a battery, this field will be ignored.

            '
          default: 0
          selector:
            number:
              min: 0.0
              max: 60.0
              step: 0.5
              unit_of_measurement: kWh
              mode: slider

    zero_feed_in_settings:
      name: Zero Feed-In Settings
      icon: mdi:transmission-tower-off
      description: Options for systems that are configured for zero grid feed-in.
      collapsed: true
      input:
        zero_feed_in:
          name: Zero Feed In
          description: 'If you have a zero feed in installation use solar production forecast
            instead of pure pv power.

            **[WARNING]**

            - **This sensor must be the same for all your created automations based on
            this blueprint!**

            **[NOTE]**

            - **solar production forecast** must be filled

            '
          default: false
          selector:
            boolean: {}
        zero_feed_in_load:
          name: Zero Feed In - Load
          description: 'This parameter defines the maximum allowed difference between
            actual PV power production and current power consumption when the battery
            is fully charged (SoC defined with *zero_feed_in_level*). Its purpose is to
            ignore small surplus values caused by system inefficiencies or inverter standby
            consumption, and to avoid false positives in PV production detection.

            Recommended setting: Set this value to approximately twice the typical difference
            observed when the battery is full and PV production slightly exceeds the load.
            Typical values: 100 to 400 W

            Example: If your system load is 500 W and PV shows 600 W when the battery
            is full, the difference is 100 W → set the threshold to 200 W.

            **[WARNING]**

            - **This sensor must be the same for all your created automations based on
            this blueprint!**

            **[NOTE]**

            - **zero_feed_in** must be activated

            '
          default: 300
          selector:
            number:
              min: 0.0
              max: 10000.0
              step: 1.0
              unit_of_measurement: W
              mode: slider
        zero_feed_in_level:
          name: Zero Feed In - Battery Level
          description: 'The power level (in percent) of your home battery must be higher
            than this value before starting consuming even with zero feed in.

            **[WARNING]**

            - **This sensor must be the same for all your created automations based on
            this blueprint!**

            **[NOTE]**

            - **zero_feed_in** must be activated - value must be set if home battery is
            installed

            '
          default: 99
          selector:
            number:
              min: 0.0
              max: 100.0
              step: 1.0
              unit_of_measurement: '%'
              mode: slider

    solar_forecast_settings:
      name: Solar Forecast Settings
      icon: mdi:weather-sunny
      description: Use solar production forecasts to make smarter decisions.
      collapsed: true
      input:
        solar_production_forecast:
          name: '*Remaining* solar production forecast (Solcast or Forecast.Solar)'
          description: 'Sensor which represents the **remaining solar production forecast**
            for the current day (in kWh). Will be used to ensure the specified *minimum
            home battery level* is reached at the end of the day.


            **[WARNING]**

            - **This sensor must be the same for all your created automations based on
            this blueprint!**


            **[NOTE]**

            - If your solar system is not coupled with a battery or if you are not enforcing
            a minimum appliance run time, leave this field empty

            '
          default:
          selector:
            entity:
              domain:
              - sensor
              multiple: false
              reorder: false
        solar_production_forecast_this_hour:
          name: Solar production forecast current hour (Solcast or Forecast.Solar)
          description: 'Sensor showing the solar forecast for the current hour (in kWh).
            Will be used in case Zero_feed_in is active, to have a better estimation of
            available PV power to be redirected to appliances. **[WARNING]**

            - **This sensor must be the same for all your created automations based on
            this blueprint!**

            **[NOTE]**

            - If you do not have zero_feed_in option enabled (you''re exporting excess
            power to grid), leave this field empty.

            '
          default:
          selector:
            entity:
              domain:
              - sensor
              multiple: false
              reorder: false
        time_of_sunset:
          name: 'The time of sunset at the current location '
          description: 'The time of sunset in the current location. You can use `sensor.sun_next_setting`.

            **[NOTE]**

            - This MUST be set if Appliance minimum daily runtime is set.

            '
          default:
          selector:
            entity:
              domain:
              - sensor
              multiple: false
              reorder: false

    appliance_settings:
      name: Appliance Settings
      icon: mdi:power-plug
      description: Configure the specific appliance to be controlled.
      collapsed: true
      input:
        appliance_priority:
          name: Appliance priority
          description: 'Appliances with a higher number are prioritized compared to appliances
            with a lower number.

            If the priority is greater than 1000 this appliance will be switched on, even
            if the excess power is not sufficient for 100% of the needed power

            '
          default: 1
          selector:
            number:
              min: 1.0
              max: 2000.0
              mode: box
              unit_of_measurement: Priority level
              step: 1.0
        appliance_switch:
          name: Appliance Entity
          description: 'Entity to control the appliance (e.g. switch entity, climate entity,
            light entity, ...)

            '
          default:
          selector:
            entity:
              multiple: false
              reorder: false
        appliance_switch_interval:
          name: Appliance On/Off switch interval
          description: 'Defines the minimum time (in minutes) before switching the appliance
            on/off again.

            Will also be used as the averaging interval for available excess power.


            **[NOTE]**

            - When first creating and executing your automation, it will most likely take
            the here defined time till your appliance can switch on, even if enough excess
            solar is available beforehand. This is due to the excess_history getting populated
            with zeros at the beginning.

            '
          default: 5
          selector:
            number:
              min: 1.0
              max: 60.0
              step: 1.0
              unit_of_measurement: min
              mode: slider
        appliance_switch_off_interval:
          name: Appliance Off switch interval
          description: 'Defines the minimum time (in minutes) before switching the appliance
            off again.

            Will also be used as the averaging interval for available excess power.


            **[NOTE]**

            - This currently only applies to dynamic current instances

            '
          default: 5
          selector:
            number:
              min: 1.0
              max: 60.0
              step: 1.0
              unit_of_measurement: min
              mode: slider
        appliance_on_only:
          name: Only-On-Appliance
          description: 'Tick this box if your appliance should only be turned on, but
            **never off**.

            Useful e.g. for washing machines, which should not be turned off even if there
            is not enough solar power anymore.

            '
          default: false
          selector:
            boolean: {}
        appliance_once_only:
          name: Only-Run-Once-Appliance
          description: 'Tick this box if your appliance should run **once a day** at most.

            '
          default: false
          selector:
            boolean: {}
        appliance_phases:
          name: Appliance Phases
          description: 'Input here, with how many phases your appliance works. Typically,
            you either have 1 phase (e.g. washing machine, dishwasher) or 3 phases (wallbox).


            **[NOTE]**

            If you have a three-phase wallbox, but your car can only charge with one phase,
            you need to input 1 here.

            '
          default: 1
          selector:
            number:
              min: 1.0
              max: 3.0
              step: 1.0
              unit_of_measurement: phases
              mode: slider
        defined_current:
          name: Appliance typical current draw
          description: 'Typical/expected current draw of your appliance per phase.

            Relevant for deciding how much excess is needed before turning the specific
            appliance on.

            If your appliance supports dynamic current setting, set the *typical current*
            to the same value as the *minimum dynamic current*.

            '
          default: 6
          selector:
            number:
              min: 0.1
              max: 16.0
              step: 0.1
              unit_of_measurement: A
              mode: slider
        actual_power:
          name: Appliance actual power sensor
          description: 'Sensor which contains the **current power consumption** of the
            appliance in watts.

            If this is left empty (not recommended), the *typical current draw* will be
            used instead.

            '
          default:
          selector:
            entity:
              domain:
              - sensor
              multiple: false
              reorder: false
        enabled:
          name: Enable Device Switch
          description: 'Optional switch/boolean which Enables/Disables the Device.

            '
          default:
          selector:
            entity:
              domain:
              - input_boolean
              - switch
              multiple: false
              reorder: false

    appliance_runtime_settings:
      name: Appliance Runtime Settings
      icon: mdi:clock-check-outline
      description: Enforce minimum or maximum daily runtimes for the appliance.
      collapsed: true
      input:
        appliance_minimum_run_time:
          name: Appliance minimum daily runtime
          description: 'Enforces that an appliance runs a minimum time every day. Useful
            for things such as pool pumps.

            Behavior is as follows:

            - During the day, if remaining daily solar production forecast says there
            will be enough power to run the appliance, wait

            - If remaining solar forecast is not enough to meet minimum runtime, turn
            on the appliance whenever there is some excess power

            - If the remaining minimum runtime is greater than the remaining time till
            the deadline, turn on the device.

            **[NOTE]**

            - For this to work correctly, you must configure the time_of_sunset and solar_production_forecast
            fields

            '
          default: 0
          selector:
            number:
              min: 0.0
              max: 1440.0
              step: 1.0
              unit_of_measurement: min
              mode: slider
        appliance_maximum_run_time:
          name: Appliance maximum daily runtime
          description: 'Limits the maximum time the appliance should run in a day. 0 means
            infinite time. This value must be greater than minimum runtime.

            '
          default: 0
          selector:
            number:
              min: 0.0
              max: 1440.0
              step: 1.0
              unit_of_measurement: min
              mode: slider
        appliance_runtime_deadline:
          name: Appliance Runtime Deadline
          description: "The latest time by which the appliance must have completed its
            minimum\n runtime. If not set, midnight (23:59) will be used as default.\n\n**Example:**
            If you set `22:30:00`, the automation will ensure that the appliance has met
            its minimum runtime by 22:30.\n"
          default: '23:59:00'
          selector:
            time: {}

    dynamic_current_settings:
      name: Dynamic Current Control
      icon: mdi:car-electric
      description: For appliances that support variable power levels (e.g., wallboxes).
      collapsed: true
      input:
        dynamic_current_appliance:
          name: Dynamic current control
          description: 'Tick this box if your appliance supports different current levels.
            Useful e.g. for **wallboxes**. If false, the appliance will only be switched
            on or off in relation to the PV excess.

            '
          default: false
          selector:
            boolean: {}
        round_target_current:
          name: Round target current
          description: 'Tick this box if your appliance only supports integer target currents.
            Will round to full integers.

            '
          default: false
          selector:
            boolean: {}
        deactivating_current:
          name: Wallbox Deactivation with current 0?
          description: 'Tick this box if your wallbox needs to be set to current 0 for
            deactivating else min_current is used.

            '
          default: false
          selector:
            boolean: {}
        appliance_current_interval:
          name: Appliance current interval
          description: 'Specifies the minimum time (in minutes) that must pass before
            the power setting can be dynamically adjusted again.


            **[NOTE]**

            - **Only relevant when dynamic current control is set!**

            '
          default: 1
          selector:
            number:
              min: 1.0
              max: 60.0
              step: 1.0
              unit_of_measurement: min
              mode: slider
        appliance_current_set_entity:
          name: Appliance SetCurrent entity
          description: 'The number entity to which the calculated current will be sent.


            **[NOTE]**

            - **Only relevant when dynamic current control is set!**

            Leave empty if *dynamic current control* is deactivated.

            '
          default:
          selector:
            entity:
              domain:
              - number
              - input_number
              multiple: false
              reorder: false
        min_current:
          name: Minimum dynamic current
          description: 'Minimum current per phase your appliance can handle.


            **[NOTE]**

            - **Only relevant when dynamic current control is set!**

            Leave empty if *dynamic current control* is deactivated.

            '
          default: 6
          selector:
            number:
              min: 0.1
              max: 32.0
              step: 0.1
              unit_of_measurement: A
              mode: slider
        max_current:
          name: Maximum dynamic current
          description: 'Maximum current per phase your appliance can handle.


            **[NOTE]**

            - **Only relevant when dynamic current control is set!**

            Leave empty if *dynamic current control* is deactivated.

            '
          default: 16
          selector:
            number:
              min: 0.1
              max: 32.0
              step: 0.1
              unit_of_measurement: A
              mode: slider
        min_solar_percent:
          name: Minimum solar power percentage
          description: 'Minimum percentage of solar power to run the appliance. E.g. if
            you configure it to 40%, your appliance will be on as long as 40% of the power
            comes from solar. This is useful to keep running the appliance even at times
            of low production, like sunset or sunrise, or in case you have a PV that is
            not sufficient to fully power the appliance.


            **[NOTE]**

            - **Currently only works with dynamic current appliances! It therefore runs
            the dynamic current appliance at minimum current as long as it can be partially
            run on solar.**

            '
          default: 100
          selector:
            number:
              min: 1.0
              max: 100.0
              step: 1.0
              unit_of_measurement: '%'
              mode: slider
  source_url: https://github.com/nicorusti/ha-advanced-blueprints/blob/main/PV_Excess_Control/blueprints/automation/pv_excess_control.yaml
mode: single
triggers:
- trigger: homeassistant
  event: start
action:
- service: pyscript.pv_excess_control
  data:
    automation_id: !input automation_id
    appliance_priority: !input appliance_priority
    export_power: !input export_power
    pv_power: !input pv_power
    load_power: !input load_power
    home_battery_level: !input home_battery_level
    min_home_battery_level: !input min_home_battery_level
    min_home_battery_level_start: !input min_home_battery_level_start
    zero_feed_in: !input zero_feed_in
    zero_feed_in_load: !input zero_feed_in_load
    zero_feed_in_level: !input zero_feed_in_level
    dynamic_current_appliance: !input dynamic_current_appliance
    round_target_current: !input round_target_current
    deactivating_current: !input deactivating_current
    appliance_current_interval: !input appliance_current_interval
    appliance_phases: !input appliance_phases
    min_current: !input min_current
    max_current: !input max_current
    min_solar_percent: !input min_solar_percent
    appliance_switch: !input appliance_switch
    appliance_switch_interval: !input appliance_switch_interval
    appliance_switch_off_interval: !input appliance_switch_off_interval
    appliance_current_set_entity: !input appliance_current_set_entity
    actual_power: !input actual_power
    defined_current: !input defined_current
    appliance_on_only: !input appliance_on_only
    grid_voltage: !input grid_voltage
    import_export_power: !input import_export_power
    home_battery_capacity: !input home_battery_capacity
    solar_production_forecast: !input solar_production_forecast
    solar_production_forecast_this_hour: !input solar_production_forecast_this_hour
    time_of_sunset: !input time_of_sunset
    appliance_once_only: !input appliance_once_only
    appliance_maximum_run_time: !input appliance_maximum_run_time
    appliance_minimum_run_time: !input appliance_minimum_run_time
    appliance_runtime_deadline: !input appliance_runtime_deadline
    enabled: !input enabled
